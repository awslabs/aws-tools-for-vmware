{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"AWS Tools for VMware Tools and sample code primarily intended for VMware Cloud on AWS. License This library is licensed under the Apache 2.0 License.","title":"Home"},{"location":"#aws-tools-for-vmware","text":"Tools and sample code primarily intended for VMware Cloud on AWS.","title":"AWS Tools for VMware"},{"location":"#license","text":"This library is licensed under the Apache 2.0 License.","title":"License"},{"location":"about/contributing/","text":"Contributing Guidelines Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional documentation, we greatly value feedback and contributions from our community. Please read through this document before submitting any issues or pull requests to ensure we have all the necessary information to effectively respond to your bug report or contribution. Reporting Bugs/Feature Requests We welcome you to use the GitHub issue tracker to report bugs or suggest features. When filing an issue, please check existing open , or recently closed , issues to make sure somebody else hasn't already reported the issue. Please try to include as much information as you can. Details like these are incredibly useful: A reproducible test case or series of steps The version of our code being used Any modifications you've made relevant to the bug Anything unusual about your environment or deployment Contributing via Pull Requests Contributions via pull requests are much appreciated. Before sending us a pull request, please ensure that: You are working against the latest source on the master branch. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already. You open an issue to discuss any significant work - we would hate for your time to be wasted. To send us a pull request, please: Fork the repository. Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change. Ensure local tests pass. Commit to your fork using clear commit messages. Send us a pull request, answering any default questions in the pull request interface. Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation. GitHub provides additional document on forking a repository and creating a pull request . Finding contributions to work on Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start. Code of Conduct This project has adopted the Amazon Open Source Code of Conduct . For more information see the Code of Conduct FAQ or contact with any additional questions or comments. Security issue notifications If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our vulnerability reporting page . Please do not create a public github issue. Licensing See the LICENSE file for our project's licensing. We will ask you to confirm the licensing of your contribution. We may ask you to sign a Contributor License Agreement (CLA) for larger changes.","title":"Contributing Guidelines"},{"location":"about/contributing/#contributing-guidelines","text":"Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional documentation, we greatly value feedback and contributions from our community. Please read through this document before submitting any issues or pull requests to ensure we have all the necessary information to effectively respond to your bug report or contribution.","title":"Contributing Guidelines"},{"location":"about/contributing/#reporting-bugsfeature-requests","text":"We welcome you to use the GitHub issue tracker to report bugs or suggest features. When filing an issue, please check existing open , or recently closed , issues to make sure somebody else hasn't already reported the issue. Please try to include as much information as you can. Details like these are incredibly useful: A reproducible test case or series of steps The version of our code being used Any modifications you've made relevant to the bug Anything unusual about your environment or deployment","title":"Reporting Bugs/Feature Requests"},{"location":"about/contributing/#contributing-via-pull-requests","text":"Contributions via pull requests are much appreciated. Before sending us a pull request, please ensure that: You are working against the latest source on the master branch. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already. You open an issue to discuss any significant work - we would hate for your time to be wasted. To send us a pull request, please: Fork the repository. Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change. Ensure local tests pass. Commit to your fork using clear commit messages. Send us a pull request, answering any default questions in the pull request interface. Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation. GitHub provides additional document on forking a repository and creating a pull request .","title":"Contributing via Pull Requests"},{"location":"about/contributing/#finding-contributions-to-work-on","text":"Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.","title":"Finding contributions to work on"},{"location":"about/contributing/#code-of-conduct","text":"This project has adopted the Amazon Open Source Code of Conduct . For more information see the Code of Conduct FAQ or contact with any additional questions or comments.","title":"Code of Conduct"},{"location":"about/contributing/#security-issue-notifications","text":"If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our vulnerability reporting page . Please do not create a public github issue.","title":"Security issue notifications"},{"location":"about/contributing/#licensing","text":"See the LICENSE file for our project's licensing. We will ask you to confirm the licensing of your contribution. We may ask you to sign a Contributor License Agreement (CLA) for larger changes.","title":"Licensing"},{"location":"about/license/","text":"Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.","title":"License"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/","text":"Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 SYNOPSIS Upgrade a standalone SQL Server Database Engine instance in-place. SYNTAX Local (Default) Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 [-FilePath] FileInfo [-FileHash] String [[-Algorithm] String ] [[-InstanceName] String ] [[-InstanceDirectory] FileInfo ] [[-ProductKey] String ] [-IAcceptSqlServerLicenseTerms] [-WhatIf] [-Confirm] [ CommonParameters ] Remote: VM by Name Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 [-FilePath] FileInfo [-FileHash] String [[-Algorithm] String ] [[-InstanceName] String ] [[-InstanceDirectory] FileInfo ] [[-ProductKey] String ] [-IAcceptSqlServerLicenseTerms] [-Credential] PSCredential -VmName String[] [-WhatIf] [-Confirm] [ CommonParameters ] Remote: VM by ID Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 [-FilePath] FileInfo [-FileHash] String [[-Algorithm] String ] [[-InstanceName] String ] [[-InstanceDirectory] FileInfo ] [[-ProductKey] String ] [-IAcceptSqlServerLicenseTerms] [-Credential] PSCredential [-VmID] String[] [-WhatIf] [-Confirm] [ CommonParameters ] DESCRIPTION What this tool does This will perform an impactful , in-place, major version upgrade, such as SQL Server 2008 SP4 -> 2017 or 2008 R2 SP3 -> 2016, on a standalone SQL Server Database Engine instance on a Windows operating system. It can be run either locally, or remotely if deployed on a Windows VM in a vSphere environment such as VMware Cloud on AWS. You must supply your own SQL Server installation media and product key / license. The compatibility level of each database deployed on the target SQL Server instance will not be modified by this script, and should remain the same, but please test thoroughly. Please see the links below for additional resources such as Microsoft's best practices for planning your SQL Server instance upgrades, breaking changes and backwards compatibility, et cetera. Again, the upgrade process is impactful, so please test thoroughly and plan for application downtime. What this tool does not do Backups are NOT included Backups are NOT included. Please make sure that you have implemented and verified proper backups, and that you have a recovery plan established that meets the recovery plan objective (RPO) and recovery time objective (RTO). This tool does not accommodate the intricacies of upgrading any high availability (HA) SQL Server instance types including: Replicated Databases Mirrored Databases Log Shipping Instances Failover Cluster Instances (FCI) AlwaysOn Availability Groups (AAG) This tool does not accommodate edition upgrades within the same version of SQL Server either. The checks run prior to the upgrade cannot test for every eventuality. In fact, most of the requirements and compatibility testing is delegated to Microsoft's SQL Server installation media since it was built with a robust testing framework. Please test thoroughly. Local upgrades For local upgrades, this script requires elevated privileges and must be run from PowerShell launched with the 'Run as Administrator' option. Remote upgrades For VMware PowerCLI-based remote upgrades, HTTPS (443/tcp) connectivity is required to the ESXi hosts as well as vCenter for executing commands in the VM's guest operating system via the VMware Guest Operations API. This connectivity is not permitted by default, such as in VMware Cloud on AWS, but can be configured. This tool does not attempt to install or import the required PowerCLI modules, nor does it attempt to establish a PowerCLI session with vCenter. For VMware PowerCLI installation instructions, please see: https://www.powershellgallery.com/packages/VMware.PowerCLI/ . Once installed, run Import-Module -Name 'VMware.VimAutomation.Core' to import the subset of modules required. To learn more about how to establish a PowerCLI session, run Get-Help -Name 'Connect-VIServer' -Detailed , which includes a few examples. All target VMs must be powered on, and VMware Tools must be installed and running in the guest operating system of each Windows VM. The supplied credentials will be used on each VM to access the guest operating system, and must have administrative privileges. Because feature: https://powercli.ideas.aha.io/ideas/PCLI-I-101 has neither been accepted nor released by the PowerCLI team, Windows User Account Control (UAC) must be disabled in each guest operating system as well. Multiple VMs can be specified in the same command for batch upgrades via an array of VM IDs or names, as well as wildcard globbing of VM names; however, the SQL Server instance on each VM is upgraded iteratively, not concurrently. Please plan accordingly. EXAMPLES EXAMPLE 1 ./Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 -FilePath D:\\setup.exe -FileHash $sha256FileHash -IAcceptSqlServerLicenseTerms -WhatIf Performs a 'dry run test' of a local, in-place upgrade of the default SQL Server Database Engine instance (MSSQLSERVER) that would install in the default directory, and validates the integrity of the specified SQL Server setup file by comparing the SHA256 file hashes. Since a product key / license was not supplied, the instance would be upgraded into Evaluation mode unless upgraded to SQL Server Express edition. EXAMPLE 2 ./Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 -FilePath D:\\setup.exe -FileHash $sha256FileHash -IAcceptSqlServerLicenseTerms Implements the previous example. Since a product key / license was not supplied, the instance will be upgraded into Evaluation mode unless upgraded to SQL Server Express edition. EXAMPLE 3 ./Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 -FilePath E:\\setup.exe -FileHash $md5FileHash -Algorithm MD5 -InstanceName SQLEXPRESS -InstanceDirectory D:\\MSSQL -ProductKey $productKey -IAcceptSqlServerLicenseTerms Performs a local, in-place upgrade of the SQLEXPRESS SQL Server Database Engine instance that will install in the specified directory, validates the integrity of the specified SQL Server setup file by comparing the MD5 file hashes, and applies the specified product key. EXAMPLE 4 ./Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 E:\\setup.exe $md5FileHash MD5 SQLEXPRESS D:\\MSSQL $productKey $true The same in-place upgrade as in the example above using positional arguments. EXAMPLE 5 ./Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 -FilePath O:\\setup.exe -FileHash $md5FileHash -Algorithm MD5 -IAcceptSqlServerLicenseTerms -Credential (Get-Credential) -VmName SQL1 , MSSQL* Performs a remote, PowerCLI-based in-place upgrade of the default SQL Server Database Engine instance (MSSQLSERVER) on the SQL1 VM, as well as any VM with a name starting 'MSSQL' (due to the '*' wildcard). It will install in the default directory, and validates the integrity of the specified SQL Server setup file by comparing the MD5 file hashes. EXAMPLE 6 ./Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 -FilePath D:\\setup.exe -FileHash $sha512FileHash -Algorithm SHA512 -IAcceptSqlServerLicenseTerms -Credential (Get-Credential) -VmID VirtualMachine-vm-42 Performs a remote, PowerCLI-based in-place upgrade of the default SQL Server Database Engine instance (MSSQLSERVER) on the VM with MoRef ID 'VirtualMachine-vm-42'. It will install in the default directory, and validates the integrity of the specified SQL Server setup file by comparing the SHA512 file hashes. EXAMPLE 7 ( Get-VM -Name *SQL* ).ID | ./Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 -FilePath D:\\setup.exe -FileHash $sha256FileHash -IAcceptSqlServerLicenseTerms -Credential (Get-Credential) Performs a remote, PowerCLI-based in-place upgrade of the default SQL Server Database Engine instance (MSSQLSERVER) on all VMs with 'SQL' in the name. It will install in the default directory, and validates the integrity of the specified SQL Server setup file by comparing the SHA256 file hashes. PARAMETERS -FilePath Specifies the path to the SQL Server installation media. Example: D:\\setup.exe Type : System.IO.FileInfo Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False -FileHash Specifies the expected SQL Server setup file hash. This can be obtained via the Get-FileHash cmdlet, the certutil.exe -HashFile command, or similar tools. Type : System.String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -Algorithm Specifies the setup file hash algorithm. Type : System.String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : SHA256 Accept pipeline input : False Accept wildcard characters : False -InstanceName Specifies the target SQL Server instance name. Type : System.String Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : MSSQLSERVER Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -InstanceDirectory Specifies a non-default installation directory for shared components. Type : System.IO.FileInfo Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -ProductKey Specifies the product key for the edition of SQL Server. Type : System.String Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -IAcceptSqlServerLicenseTerms Required to acknowledge acceptance of Microsoft's license terms for SQL Server. Reference: https://docs.microsoft.com/sql/database-engine/install-windows/install-sql-server-from-the-command-prompt#Upgrade Type : System.Management.Automation.SwitchParameter Parameter Sets : (All) Aliases : Required : True Position : 7 Default value : False Accept pipeline input : False Accept wildcard characters : False -Credential Specifies the Windows guest operating system credentials with administrative rights. Used for updating the SQL Server instance. Type : System.Management.Automation.PSCredential Parameter Sets : Remote : VM by Name, Remote : VM by ID Aliases : Required : True Position : 8 Default value : None Accept pipeline input : False Accept wildcard characters : False -VmID Specifies the vSphere managed object reference identifier (MoRef ID) of one or more target VMs. Example: VirtualMachine-vm-431 Type : System.String[] Parameter Sets : Remote : VM by ID Aliases : ID Required : True Position : 9 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -VmName The name of one or more target VMs. Accepts wildcard characters. Example: SQL1, MSSQL* Type : System.String[] Parameter Sets : Remote : VM by Name Aliases : Name Required : True Position : Named Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : True -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : System.Management.Automation.SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm Prompts you for confirmation before running the cmdlet. Type : System.Management.Automation.SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ). INPUTS System.String OUTPUTS System.String NOTES Security To reduce the risk of unintended code execution, a file hash must be supplied for the setup file, which will be compared to a file hash of the specified setup file in an attempt to confirm file integrity and that the correct media has been loaded before launching the upgrade. Additionally, a few properties will be checked in an attempt to confirm that a SQL Server setup file has been specified. RELATED LINKS https://awslabs.github.io/aws-tools-for-vmware/powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/ https://github.com/awslabs/aws-tools-for-vmware/blob/master/powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 https://www.powershellgallery.com/packages/Upgrade-SqlServerStandaloneDatabaseEngineInstance/ https://docs.microsoft.com/sql/database-engine/install-windows/supported-version-and-edition-upgrades https://docs.microsoft.com/sql/database-engine/install-windows/upgrade-database-engine https://docs.microsoft.com/sql/database-engine/install-windows/plan-and-test-the-database-engine-upgrade-plan https://docs.microsoft.com/sql/sql-server/install/hardware-and-software-requirements-for-installing-sql-server https://docs.microsoft.com/sql/database-engine/sql-server-database-engine-backward-compatibility https://github.com/awslabs/aws-tools-for-vmware/issues/new https://console.aws.amazon.com/support/home#/case/create?issueType=technical https://aws.amazon.com/blogs/database/upgrade-your-end-of-support-sql-server-instances-in-vmware-cloud-on-aws-with-ease/","title":"Upgrade SQL Server Standalone Database Engine Instance"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#upgrade-sqlserverstandalonedatabaseengineinstanceps1","text":"","title":"Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#synopsis","text":"Upgrade a standalone SQL Server Database Engine instance in-place.","title":"SYNOPSIS"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#syntax","text":"","title":"SYNTAX"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#local-default","text":"Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 [-FilePath] FileInfo [-FileHash] String [[-Algorithm] String ] [[-InstanceName] String ] [[-InstanceDirectory] FileInfo ] [[-ProductKey] String ] [-IAcceptSqlServerLicenseTerms] [-WhatIf] [-Confirm] [ CommonParameters ]","title":"Local (Default)"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#remote-vm-by-name","text":"Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 [-FilePath] FileInfo [-FileHash] String [[-Algorithm] String ] [[-InstanceName] String ] [[-InstanceDirectory] FileInfo ] [[-ProductKey] String ] [-IAcceptSqlServerLicenseTerms] [-Credential] PSCredential -VmName String[] [-WhatIf] [-Confirm] [ CommonParameters ]","title":"Remote: VM by Name"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#remote-vm-by-id","text":"Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 [-FilePath] FileInfo [-FileHash] String [[-Algorithm] String ] [[-InstanceName] String ] [[-InstanceDirectory] FileInfo ] [[-ProductKey] String ] [-IAcceptSqlServerLicenseTerms] [-Credential] PSCredential [-VmID] String[] [-WhatIf] [-Confirm] [ CommonParameters ]","title":"Remote: VM by ID"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#description","text":"","title":"DESCRIPTION"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#what-this-tool-does","text":"This will perform an impactful , in-place, major version upgrade, such as SQL Server 2008 SP4 -> 2017 or 2008 R2 SP3 -> 2016, on a standalone SQL Server Database Engine instance on a Windows operating system. It can be run either locally, or remotely if deployed on a Windows VM in a vSphere environment such as VMware Cloud on AWS. You must supply your own SQL Server installation media and product key / license. The compatibility level of each database deployed on the target SQL Server instance will not be modified by this script, and should remain the same, but please test thoroughly. Please see the links below for additional resources such as Microsoft's best practices for planning your SQL Server instance upgrades, breaking changes and backwards compatibility, et cetera. Again, the upgrade process is impactful, so please test thoroughly and plan for application downtime.","title":"What this tool does"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#what-this-tool-does-not-do","text":"Backups are NOT included Backups are NOT included. Please make sure that you have implemented and verified proper backups, and that you have a recovery plan established that meets the recovery plan objective (RPO) and recovery time objective (RTO). This tool does not accommodate the intricacies of upgrading any high availability (HA) SQL Server instance types including: Replicated Databases Mirrored Databases Log Shipping Instances Failover Cluster Instances (FCI) AlwaysOn Availability Groups (AAG) This tool does not accommodate edition upgrades within the same version of SQL Server either. The checks run prior to the upgrade cannot test for every eventuality. In fact, most of the requirements and compatibility testing is delegated to Microsoft's SQL Server installation media since it was built with a robust testing framework. Please test thoroughly.","title":"What this tool does not do"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#local-upgrades","text":"For local upgrades, this script requires elevated privileges and must be run from PowerShell launched with the 'Run as Administrator' option.","title":"Local upgrades"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#remote-upgrades","text":"For VMware PowerCLI-based remote upgrades, HTTPS (443/tcp) connectivity is required to the ESXi hosts as well as vCenter for executing commands in the VM's guest operating system via the VMware Guest Operations API. This connectivity is not permitted by default, such as in VMware Cloud on AWS, but can be configured. This tool does not attempt to install or import the required PowerCLI modules, nor does it attempt to establish a PowerCLI session with vCenter. For VMware PowerCLI installation instructions, please see: https://www.powershellgallery.com/packages/VMware.PowerCLI/ . Once installed, run Import-Module -Name 'VMware.VimAutomation.Core' to import the subset of modules required. To learn more about how to establish a PowerCLI session, run Get-Help -Name 'Connect-VIServer' -Detailed , which includes a few examples. All target VMs must be powered on, and VMware Tools must be installed and running in the guest operating system of each Windows VM. The supplied credentials will be used on each VM to access the guest operating system, and must have administrative privileges. Because feature: https://powercli.ideas.aha.io/ideas/PCLI-I-101 has neither been accepted nor released by the PowerCLI team, Windows User Account Control (UAC) must be disabled in each guest operating system as well. Multiple VMs can be specified in the same command for batch upgrades via an array of VM IDs or names, as well as wildcard globbing of VM names; however, the SQL Server instance on each VM is upgraded iteratively, not concurrently. Please plan accordingly.","title":"Remote upgrades"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#examples","text":"","title":"EXAMPLES"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#example-1","text":"./Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 -FilePath D:\\setup.exe -FileHash $sha256FileHash -IAcceptSqlServerLicenseTerms -WhatIf Performs a 'dry run test' of a local, in-place upgrade of the default SQL Server Database Engine instance (MSSQLSERVER) that would install in the default directory, and validates the integrity of the specified SQL Server setup file by comparing the SHA256 file hashes. Since a product key / license was not supplied, the instance would be upgraded into Evaluation mode unless upgraded to SQL Server Express edition.","title":"EXAMPLE 1"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#example-2","text":"./Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 -FilePath D:\\setup.exe -FileHash $sha256FileHash -IAcceptSqlServerLicenseTerms Implements the previous example. Since a product key / license was not supplied, the instance will be upgraded into Evaluation mode unless upgraded to SQL Server Express edition.","title":"EXAMPLE 2"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#example-3","text":"./Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 -FilePath E:\\setup.exe -FileHash $md5FileHash -Algorithm MD5 -InstanceName SQLEXPRESS -InstanceDirectory D:\\MSSQL -ProductKey $productKey -IAcceptSqlServerLicenseTerms Performs a local, in-place upgrade of the SQLEXPRESS SQL Server Database Engine instance that will install in the specified directory, validates the integrity of the specified SQL Server setup file by comparing the MD5 file hashes, and applies the specified product key.","title":"EXAMPLE 3"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#example-4","text":"./Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 E:\\setup.exe $md5FileHash MD5 SQLEXPRESS D:\\MSSQL $productKey $true The same in-place upgrade as in the example above using positional arguments.","title":"EXAMPLE 4"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#example-5","text":"./Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 -FilePath O:\\setup.exe -FileHash $md5FileHash -Algorithm MD5 -IAcceptSqlServerLicenseTerms -Credential (Get-Credential) -VmName SQL1 , MSSQL* Performs a remote, PowerCLI-based in-place upgrade of the default SQL Server Database Engine instance (MSSQLSERVER) on the SQL1 VM, as well as any VM with a name starting 'MSSQL' (due to the '*' wildcard). It will install in the default directory, and validates the integrity of the specified SQL Server setup file by comparing the MD5 file hashes.","title":"EXAMPLE 5"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#example-6","text":"./Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 -FilePath D:\\setup.exe -FileHash $sha512FileHash -Algorithm SHA512 -IAcceptSqlServerLicenseTerms -Credential (Get-Credential) -VmID VirtualMachine-vm-42 Performs a remote, PowerCLI-based in-place upgrade of the default SQL Server Database Engine instance (MSSQLSERVER) on the VM with MoRef ID 'VirtualMachine-vm-42'. It will install in the default directory, and validates the integrity of the specified SQL Server setup file by comparing the SHA512 file hashes.","title":"EXAMPLE 6"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#example-7","text":"( Get-VM -Name *SQL* ).ID | ./Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 -FilePath D:\\setup.exe -FileHash $sha256FileHash -IAcceptSqlServerLicenseTerms -Credential (Get-Credential) Performs a remote, PowerCLI-based in-place upgrade of the default SQL Server Database Engine instance (MSSQLSERVER) on all VMs with 'SQL' in the name. It will install in the default directory, and validates the integrity of the specified SQL Server setup file by comparing the SHA256 file hashes.","title":"EXAMPLE 7"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#parameters","text":"","title":"PARAMETERS"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#-filepath","text":"Specifies the path to the SQL Server installation media. Example: D:\\setup.exe Type : System.IO.FileInfo Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-FilePath"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#-filehash","text":"Specifies the expected SQL Server setup file hash. This can be obtained via the Get-FileHash cmdlet, the certutil.exe -HashFile command, or similar tools. Type : System.String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-FileHash"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#-algorithm","text":"Specifies the setup file hash algorithm. Type : System.String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : SHA256 Accept pipeline input : False Accept wildcard characters : False","title":"-Algorithm"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#-instancename","text":"Specifies the target SQL Server instance name. Type : System.String Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : MSSQLSERVER Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-InstanceName"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#-instancedirectory","text":"Specifies a non-default installation directory for shared components. Type : System.IO.FileInfo Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-InstanceDirectory"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#-productkey","text":"Specifies the product key for the edition of SQL Server. Type : System.String Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-ProductKey"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#-iacceptsqlserverlicenseterms","text":"Required to acknowledge acceptance of Microsoft's license terms for SQL Server. Reference: https://docs.microsoft.com/sql/database-engine/install-windows/install-sql-server-from-the-command-prompt#Upgrade Type : System.Management.Automation.SwitchParameter Parameter Sets : (All) Aliases : Required : True Position : 7 Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-IAcceptSqlServerLicenseTerms"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#-credential","text":"Specifies the Windows guest operating system credentials with administrative rights. Used for updating the SQL Server instance. Type : System.Management.Automation.PSCredential Parameter Sets : Remote : VM by Name, Remote : VM by ID Aliases : Required : True Position : 8 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Credential"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#-vmid","text":"Specifies the vSphere managed object reference identifier (MoRef ID) of one or more target VMs. Example: VirtualMachine-vm-431 Type : System.String[] Parameter Sets : Remote : VM by ID Aliases : ID Required : True Position : 9 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-VmID"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#-vmname","text":"The name of one or more target VMs. Accepts wildcard characters. Example: SQL1, MSSQL* Type : System.String[] Parameter Sets : Remote : VM by Name Aliases : Name Required : True Position : Named Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : True","title":"-VmName"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : System.Management.Automation.SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : System.Management.Automation.SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters ( http://go.microsoft.com/fwlink/?LinkID=113216 ).","title":"CommonParameters"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#inputs","text":"","title":"INPUTS"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#systemstring","text":"","title":"System.String"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#outputs","text":"","title":"OUTPUTS"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#systemstring_1","text":"","title":"System.String"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#notes","text":"","title":"NOTES"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#security","text":"To reduce the risk of unintended code execution, a file hash must be supplied for the setup file, which will be compared to a file hash of the specified setup file in an attempt to confirm file integrity and that the correct media has been loaded before launching the upgrade. Additionally, a few properties will be checked in an attempt to confirm that a SQL Server setup file has been specified.","title":"Security"},{"location":"powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/#related-links","text":"https://awslabs.github.io/aws-tools-for-vmware/powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1/ https://github.com/awslabs/aws-tools-for-vmware/blob/master/powershell/Upgrade-SqlServerStandaloneDatabaseEngineInstance.ps1 https://www.powershellgallery.com/packages/Upgrade-SqlServerStandaloneDatabaseEngineInstance/ https://docs.microsoft.com/sql/database-engine/install-windows/supported-version-and-edition-upgrades https://docs.microsoft.com/sql/database-engine/install-windows/upgrade-database-engine https://docs.microsoft.com/sql/database-engine/install-windows/plan-and-test-the-database-engine-upgrade-plan https://docs.microsoft.com/sql/sql-server/install/hardware-and-software-requirements-for-installing-sql-server https://docs.microsoft.com/sql/database-engine/sql-server-database-engine-backward-compatibility https://github.com/awslabs/aws-tools-for-vmware/issues/new https://console.aws.amazon.com/support/home#/case/create?issueType=technical https://aws.amazon.com/blogs/database/upgrade-your-end-of-support-sql-server-instances-in-vmware-cloud-on-aws-with-ease/","title":"RELATED LINKS"},{"location":"terraform/Deploy-XNumShellVMs/","text":"Deploy x number of shell VMs in VMware Cloud on AWS This example shows how to programmatically deploy a set amount of \"shell\" VMs (no operating system installed) in a VMware Cloud on AWS Software-defined Data Center (SDDC) via HashiCorp Terraform . The original use case for this template was simple scalability testing, but it could also be used as a starter infrastructure as code template for your SDDC. Getting Started Prerequisites HashiCorp Terraform VMware Cloud on AWS console Deploy cp ./terraform.tfvars.example ./terraform.tfvars Update values in ./terraform.tfvars as appropriate terraform init terraform plan terraform apply Destroy terraform destroy Additional Resources Getting started with HashiCorp Terraform HashiCorp Terraform source code VMware Cloud on AWS documentation","title":"Deploy x number of shell VMs in VMware Cloud on AWS"},{"location":"terraform/Deploy-XNumShellVMs/#deploy-x-number-of-shell-vms-in-vmware-cloud-on-aws","text":"This example shows how to programmatically deploy a set amount of \"shell\" VMs (no operating system installed) in a VMware Cloud on AWS Software-defined Data Center (SDDC) via HashiCorp Terraform . The original use case for this template was simple scalability testing, but it could also be used as a starter infrastructure as code template for your SDDC.","title":"Deploy x number of shell VMs in VMware Cloud on AWS"},{"location":"terraform/Deploy-XNumShellVMs/#getting-started","text":"","title":"Getting Started"},{"location":"terraform/Deploy-XNumShellVMs/#prerequisites","text":"HashiCorp Terraform VMware Cloud on AWS console","title":"Prerequisites"},{"location":"terraform/Deploy-XNumShellVMs/#deploy","text":"cp ./terraform.tfvars.example ./terraform.tfvars Update values in ./terraform.tfvars as appropriate terraform init terraform plan terraform apply","title":"Deploy"},{"location":"terraform/Deploy-XNumShellVMs/#destroy","text":"terraform destroy","title":"Destroy"},{"location":"terraform/Deploy-XNumShellVMs/#additional-resources","text":"Getting started with HashiCorp Terraform HashiCorp Terraform source code VMware Cloud on AWS documentation","title":"Additional Resources"}]}